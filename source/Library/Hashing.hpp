#ifndef _LIBRARY_CFG_HPP_
#define _LIBRARY_CFG_HPP_

// ------------------------------------------------------------------------------------------------
#include "Common.hpp"

// ------------------------------------------------------------------------------------------------
namespace SqMod {

/* ------------------------------------------------------------------------------------------------
 * ...
*/
template < class T > class HashWrapper
{
public:

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    HashWrapper() = default;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    HashWrapper(const HashWrapper & o) = default;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    HashWrapper(HashWrapper && o) = default;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    ~HashWrapper() = default;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    HashWrapper & operator = (const HashWrapper & o) = default;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    HashWrapper & operator = (HashWrapper && o) = default;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    String ToString()
    {
        return m_Encoder.getHash();
    }

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    void Reset()
    {
        m_Encoder.reset();
    }

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    String Compute(const String & str)
    {
        return m_Encoder(str);
    }

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    String GetHash()
    {
        return m_Encoder.getHash();
    }

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    void AddStr(const String & str)
    {
        m_Encoder.add(str.data(), str.length() * sizeof(String::value_type));
    }

private:

    // --------------------------------------------------------------------------------------------
    T   m_Encoder;
};

} // Namespace:: SqMod

#endif // _LIBRARY_CFG_HPP_
