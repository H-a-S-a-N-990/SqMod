#ifndef _MISC_VEHICLE_IMMUNITY_HPP_
#define _MISC_VEHICLE_IMMUNITY_HPP_

// ------------------------------------------------------------------------------------------------
#include "Common.hpp"

// ------------------------------------------------------------------------------------------------
namespace SqMod {

/* ------------------------------------------------------------------------------------------------
 * ...
*/
struct CVehicleImmunity
{

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    CVehicleImmunity();

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    CVehicleImmunity(SQInt32 flags);

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    CVehicleImmunity(const CVehicleImmunity & x);

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    CVehicleImmunity(CVehicleImmunity && x);

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    ~CVehicleImmunity();

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    CVehicleImmunity & operator= (const CVehicleImmunity & x);

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    CVehicleImmunity & operator= (CVehicleImmunity && x);

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    bool operator == (const CVehicleImmunity & x) const;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    bool operator != (const CVehicleImmunity & x) const;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    bool operator < (const CVehicleImmunity & x) const;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    bool operator > (const CVehicleImmunity & x) const;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    bool operator <= (const CVehicleImmunity & x) const;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    bool operator >= (const CVehicleImmunity & x) const;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    SQInteger Cmp(const CVehicleImmunity & x) const;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    operator SQInt32 () const;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    operator bool () const;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    SQInt32 GetFlags() const;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    void SetFlags(SQInt32 flags);

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    CVehicleImmunity & SetnGet(SQInt32 flags);

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    void Apply(const CVehicle & vehicle) const;

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    void EnableAll();

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    void DisableAll();

protected:

    /* --------------------------------------------------------------------------------------------
     * ...
    */
    SQInt32 m_Flags;
};

} // Namespace:: SqMod

#endif // _MISC_VEHICLE_IMMUNITY_HPP_